#1.Найдите сумму всех чисел меньше 1000, кратных 3 или 5.
def quest1():
    i = 0
    summa = 0
    while i<1000:
        if i%3 is 0 or i%5 is 0: summa += i
        i+=1
    print(summa)

#2.Найдите сумму всех четных элементов ряда Фибоначчи, которые не превышают четыре миллиона.
def quest2():
    a = 0
    b = 1
    c = 0
    summa = 0
    while c < 4000000:
        c = a+b
        if c%2 is 0: summa += c
        a = b
        b = c
    print(summa)

#3.Каков самый большой делитель числа 600851475143, являющийся простым числом?
def quest3():
    num = 600851475143
    divider = 0
    i = 1
    while i <= num:
        while simpleCheck(i) is 0 and i<=num:
            i += 1
        if num%i is 0 and i > divider:
            divider = i
        i += 1
    print(divider)

#проверка на простое число
def simpleCheck(num):
    i = 1
    j = 0
    while i <= num:
        if num%i is 0: 
            j += 1
        if j > 2: 
            break
        i += 1
    if j > 2:
        return 0
    if j is 2:
        return 1
    return 0
#4.Найдите самый большой палиндром, полученный умножением двух трехзначных чисел.
def quest4():
    start = 100
    end = 999
    i = start
    j = start
    maxMult = 0
    while len(str(i)) <= len(str(end)):
        while len(str(j)) <= len(str(end)):
            mult = i * j
            if palindromCheck(mult) and mult > maxMult:
                maxMult = mult
            j += 1
        i += 1 
        j = start
    print(maxMult)

#проверка на палиндром
def palindromCheck(num):
    strNum = str(num)
    i=0
    j=0
    while i<=len(strNum)-1:
        if strNum[i] == strNum[len(strNum)-1-i]:
            j += 1
        else: break
        i += 1
    if j == len(strNum): return 1
    return 0

#5.Какое самое маленькое число делится нацело на все числа от 1 до 20?
def quest5(start = 1, end = 20):
    i = 1
    while 1:
        if divineCheck(i, start, end):
            print(i)
            break
        i += 1

#проверка на деление нацело
def divineCheck(num, start = 1, end = 20):
    i = start
    j = 0
    while i <= end:
        if num%i == 0:
            j += 1
        i += 1
    if j == end - start + 1:
        return 1
    return 0

import math
#6.Найдите разность между суммой квадратов и квадратом суммы первых ста натуральных чисел
def quest6(end = 100):
    i = 0
    summaSquads = 0
    summa = 0
    while i <= end:
        summa += i
        summaSquads += i*i
        i += 1
    print(math.fabs(summaSquads - summa*summa))
    
#7.Какое число является 10001-ым простым числом?
def quest7(end = 10001):
    i = 0
    j = 0
    while 1:
        if simpleCheck(i):
            j += 1
        if j == end:
            print(i)
            break
        i += 1
#8.Найдите наибольшее произведение тринадцати последовательных цифр в данном числе.
def quest8(end = 13):
    string = \
'73167176531330624919225119674426574742355349194934\
96983520312774506326239578318016984801869478851843\
85861560789112949495459501737958331952853208805511\
12540698747158523863050715693290963295227443043557\
66896648950445244523161731856403098711121722383113\
62229893423380308135336276614282806444486645238749\
30358907296290491560440772390713810515859307960866\
70172427121883998797908792274921901699720888093776\
65727333001053367881220235421809751254540594752243\
52584907711670556013604839586446706324415722155397\
53697817977846174064955149290862569321978468622482\
83972241375657056057490261407972968652414535100474\
82166370484403199890008895243450658541227588666881\
16427171479924442928230863465674813919123162824586\
17866458359124566529476545682848912883142607690042\
24219022671055626321111109370544217506941658960408\
07198403850962455444362981230987879927244284909188\
84580156166097919133875499200524063689912560717606\
05886116467109405077541002256983155200055935729725\
71636269561882670428252483600823257530420752963450'
    maxMult = 0
    i = 0
    while i+end-1 != len(string):
        mult = 1
        j = i - end + 1
        while j <= i:
            mult *= int(string[j])
            j += 1
        if  mult > maxMult:
            maxMult = mult
        i += 1
    print("Наибольшее произведение: " + str(maxMult))

#9.Существует только одна тройка Пифагора, для которой a + b + c = 1000. Найдите произведение abc.
#a<b<c a^2 + b^2 = c^2
from sympy.solvers import solve
from sympy import Symbol
import sage
def quest9(cond = 1000):
    for a in range(0,cond):
        for c in range(0, cond):
            b = cond - a - c
            if a*a + b*b == c*c and a<b and b<c:
                print("a = " + str(a) + " b = " + str(b) + " c = " + str(c))
                print("a*b*c = " + str(a*b*c))
    '''
    d = solve([a+b+c-1000,a**2+b**2-c**2],b,c)
    d = tuple(d)
    d = d[0]
    d = list(d)
    #d = str(d)
    a = solve(d[0],a)
    a = a[0]
    d = solve([a+b+c-1000,a**2+b**2-c**2],b,c)
    '''
    #print(d)


#10.Найдите сумму всех простых чисел меньше двух миллионов.
def quest10(end = 2000000):
    i = 0
    summa = 0
    while(i <= end):
        if simpleCheck(i) == 1:
            summa += i
            print("Простое число = " + str(i) + " Сумма = " + str(summa))
        i += 1
    print(summa)

#11.Каково наибольшее произведение четырех подряд идущих чисел в таблице 20×20, расположенных в любом направлении (вверх, вниз, вправо, влево или по диагонали)?


mas ="08 02 22 97 38 15 00 40 00 75 04 05 07 78 52 12 50 77 91 08 \
49 49 99 40 17 81 18 57 60 87 17 40 98 43 69 48 04 56 62 00 \
81 49 31 73 55 79 14 29 93 71 40 67 53 88 30 03 49 13 36 65 \
52 70 95 23 04 60 11 42 69 24 68 56 01 32 56 71 37 02 36 91 \
22 31 16 71 51 67 63 89 41 92 36 54 22 40 40 28 66 33 13 80 \
24 47 32 60 99 03 45 02 44 75 33 53 78 36 84 20 35 17 12 50 \
32 98 81 28 64 23 67 10 26 38 40 67 59 54 70 66 18 38 64 70 \
67 26 20 68 02 62 12 20 95 63 94 39 63 08 40 91 66 49 94 21 \
24 55 58 05 66 73 99 26 97 17 78 78 96 83 14 88 34 89 63 72 \
21 36 23 09 75 00 76 44 20 45 35 14 00 61 33 97 34 31 33 95 \
78 17 53 28 22 75 31 67 15 94 03 80 04 62 16 14 09 53 56 92 \
16 39 05 42 96 35 31 47 55 58 88 24 00 17 54 24 36 29 85 57 \
86 56 00 48 35 71 89 07 05 44 44 37 44 60 21 58 51 54 17 58 \
19 80 81 68 05 94 47 69 28 73 92 13 86 52 17 77 04 89 55 40 \
04 52 08 83 97 35 99 16 07 97 57 32 16 26 26 79 33 27 98 66 \
88 36 68 87 57 62 20 72 03 46 33 67 46 55 12 32 63 93 53 69 \
04 42 16 73 38 25 39 11 24 94 72 18 08 46 29 32 40 62 76 36 \
20 69 36 41 72 30 23 88 34 62 99 69 82 67 59 85 74 04 36 16 \
20 73 35 29 78 31 90 01 74 31 49 71 48 86 81 16 23 57 05 54 \
01 70 54 71 83 51 54 69 16 92 33 48 61 43 52 01 89 19 67 48"
mas = mas.replace('\n',' ')
mas = mas.split(' ')

def quest11(mas, x = 20, y = 20):
    i = 0 
    j = 0
    newMas = []
    pack = []
    while j < y:
        while i < x*j+x:
            pack.append(int(mas[i]))
            i += 1   
        newMas.append(pack)
        pack = []
        j += 1
    i = 0
    j = 0
    mult = 0
    maxMult = 0
    mas = newMas
    while j < y:#справа налево
        while i < x-3:
            mult = mas[j][i]*mas[j][i+1]*mas[j][i+2]*mas[j][i+3]
            if mult > maxMult:
                maxMult = mult
            i += 1
        i = 0
        j += 1
    i = 0
    j = 0
    while i < x:#сверху вниз
        while j < y - 3:
            mult = mas[j][i]*mas[j+1][i]*mas[j+2][i]*mas[j+3][i]
            if mult > maxMult:
                maxMult = mult
                #print("max = " + str(mas[j][i]) + " " + str(mas[j+1][i])+ " " + str(mas[j+2][i])+ " " + str(mas[j+3][i]))
            j += 1
        i += 1
        j = 0
    i = 0
    j = 0
    while j < y - 3:#диагональ справа налево сверху вниз
        while i < x -3:
            mult = mas[j][i]*mas[j+1][i+1]*mas[j+2][i+2]*mas[j+3][i+3]
            if mult > maxMult:
                maxMult = mult
            i += 1
        i = 0
        j += 1
    i = x - 1
    j = 0
    while j < y - 3:#диагональ слева направо сверху вниз
        while 2 < i:
            mult = mas[j][i]*mas[j+1][i-1]*mas[j+2][i-2]*mas[j+3][i-3]
            if mult > maxMult:
                maxMult = mult
            i -= 1
        i = x - 1
        j += 1
    print(maxMult)

#quest11(mas)

#12.Какого первое треугольное число, у которого более пятисот делителей?
def quest12(end = 500):
    i = 0
    triangle = 0
    while 1:
        triangle += i
        count = dividerCounter(triangle)
        if count > end:
            print(triangle)
            return triangle
        print("Треугольное число номер " + str(i) + " = " + str(triangle) + ". Количество делителей = " + str(count))
        i += 1

#Возвращет количество делителей числа num
def dividerCounter(num):
    i = 1
    counter = 0
    while i <= num:
        if dividerCheck(num, i):
            counter += 1
        i += 1
    return counter

#Является ли div делителем num
def dividerCheck(num, div):
    if num%div == 0:
        return 1
    return 0

#13.Найдите первые десять цифр суммы следующих ста 50-значных чисел.
def quest13():
    mas = [37107287533902102798797998220837590246510135740250,
46376937677490009712648124896970078050417018260538,
74324986199524741059474233309513058123726617309629,
91942213363574161572522430563301811072406154908250,
23067588207539346171171980310421047513778063246676,
89261670696623633820136378418383684178734361726757,
28112879812849979408065481931592621691275889832738,
44274228917432520321923589422876796487670272189318,
47451445736001306439091167216856844588711603153276,
70386486105843025439939619828917593665686757934951,
62176457141856560629502157223196586755079324193331,
64906352462741904929101432445813822663347944758178,
92575867718337217661963751590579239728245598838407,
58203565325359399008402633568948830189458628227828,
80181199384826282014278194139940567587151170094390,
35398664372827112653829987240784473053190104293586,
86515506006295864861532075273371959191420517255829,
71693888707715466499115593487603532921714970056938,
54370070576826684624621495650076471787294438377604,
53282654108756828443191190634694037855217779295145,
36123272525000296071075082563815656710885258350721,
45876576172410976447339110607218265236877223636045,
17423706905851860660448207621209813287860733969412,
81142660418086830619328460811191061556940512689692,
51934325451728388641918047049293215058642563049483,
62467221648435076201727918039944693004732956340691,
15732444386908125794514089057706229429197107928209,
55037687525678773091862540744969844508330393682126,
18336384825330154686196124348767681297534375946515,
80386287592878490201521685554828717201219257766954,
78182833757993103614740356856449095527097864797581,
16726320100436897842553539920931837441497806860984,
48403098129077791799088218795327364475675590848030,
87086987551392711854517078544161852424320693150332,
59959406895756536782107074926966537676326235447210,
69793950679652694742597709739166693763042633987085,
41052684708299085211399427365734116182760315001271,
65378607361501080857009149939512557028198746004375,
35829035317434717326932123578154982629742552737307,
94953759765105305946966067683156574377167401875275,
88902802571733229619176668713819931811048770190271,
25267680276078003013678680992525463401061632866526,
36270218540497705585629946580636237993140746255962,
24074486908231174977792365466257246923322810917141,
91430288197103288597806669760892938638285025333403,
34413065578016127815921815005561868836468420090470,
23053081172816430487623791969842487255036638784583,
11487696932154902810424020138335124462181441773470,
63783299490636259666498587618221225225512486764533,
67720186971698544312419572409913959008952310058822,
95548255300263520781532296796249481641953868218774,
76085327132285723110424803456124867697064507995236,
37774242535411291684276865538926205024910326572967,
23701913275725675285653248258265463092207058596522,
29798860272258331913126375147341994889534765745501,
18495701454879288984856827726077713721403798879715,
38298203783031473527721580348144513491373226651381,
34829543829199918180278916522431027392251122869539,
40957953066405232632538044100059654939159879593635,
29746152185502371307642255121183693803580388584903,
41698116222072977186158236678424689157993532961922,
62467957194401269043877107275048102390895523597457,
23189706772547915061505504953922979530901129967519,
86188088225875314529584099251203829009407770775672,
11306739708304724483816533873502340845647058077308,
82959174767140363198008187129011875491310547126581,
97623331044818386269515456334926366572897563400500,
42846280183517070527831839425882145521227251250327,
55121603546981200581762165212827652751691296897789,
32238195734329339946437501907836945765883352399886,
75506164965184775180738168837861091527357929701337,
62177842752192623401942399639168044983993173312731,
32924185707147349566916674687634660915035914677504,
99518671430235219628894890102423325116913619626622,
73267460800591547471830798392868535206946944540724,
76841822524674417161514036427982273348055556214818,
97142617910342598647204516893989422179826088076852,
87783646182799346313767754307809363333018982642090,
10848802521674670883215120185883543223812876952786,
71329612474782464538636993009049310363619763878039,
62184073572399794223406235393808339651327408011116,
66627891981488087797941876876144230030984490851411,
60661826293682836764744779239180335110989069790714,
85786944089552990653640447425576083659976645795096,
66024396409905389607120198219976047599490197230297,
64913982680032973156037120041377903785566085089252,
16730939319872750275468906903707539413042652315011,
94809377245048795150954100921645863754710598436791,
78639167021187492431995700641917969777599028300699,
15368713711936614952811305876380278410754449733078,
40789923115535562561142322423255033685442488917353,
44889911501440648020369068063960672322193204149535,
41503128880339536053299340368006977710650566631954,
81234880673210146739058568557934581403627822703280,
82616570773948327592232845941706525094512325230608,
22918802058777319719839450180888072429661980811197,
77158542502016545090413245809786882778948721859617,
72107838435069186155435662884062257473692284509516,
20849603980134001723930671666823555245252804609722,
53503534226472524250874054075591789781264330331690]
    summa = 0
    for a in mas:
        summa += a
    i = 0
    print("Сумма чисел = " + str(summa))
    string = str(summa)
    print("Первые десять чисел = ", end = '')
    while i < 10:
        print(string[i],end='')
        i += 1


#14.Какой начальный элемент меньше миллиона сгенерирует самую длинную последовательность? n -> n/2 (n - четное) n -> 3n+1 (n - нечетное)
def quest14(start = 1000000):
    k = 0
    l = 0
    maxL = 0
    maxElem = 0
    while k < start:
        i = start - k
        while i > 1:
            if i%2 == 0:
                i = i/2
            else:
                i = 3*i + 1
            l += 1
        if l > maxL:
            maxL = l
            maxElem = start - k
        l = 0
        k += 1
    print("Максимальная длина последовательности = "+ str(maxL + 1) + " у элемента "+ str(maxElem))
    return maxL + 1

#quest14()

#15.Начиная в левом верхнем углу сетки 2×2 и имея возможность двигаться только вниз или вправо, существует ровно 6 маршрутов до правого нижнего угла сетки. Сколько существует таких маршрутов в сетке 20×20?

#16. 2**15 = 32768, сумма цифр этого числа равна 3 + 2 + 7 + 6 + 8 = 26. Какова сумма цифр числа 2**1000?
#считает сумму цифр num
def quest16(num):
    string = str(num)
    i = 0
    summa = 0
    while i < len(string):
        summa += int(string[i])
        i += 1
    return summa

#17.Если записать числа от 1 до 5 английскими словами (one, two, three, four, five), то используется всего 3 + 3 + 5 + 4 + 4 = 19 букв. Сколько букв понадобится для записи всех чисел от 1 до 1000 (one thousand) включительно?
'''
Примечание: Не считайте пробелы и дефисы. Например, число 342 (three hundred and forty-two) состоит из 23 букв, число 115 (one hundred and fifteen) - из 20 букв. Использование "and" при записи чисел соответствует правилам британского английского.
'''

def quest17():
    pass#list words = ["one","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve","thirteen","fourteen", "fifteen","sixteen","seventeen", "eighteen","nineteen"]

#18.
'''
Начиная в вершине треугольника (см. пример ниже) и перемещаясь вниз на смежные числа, максимальная сумма до основания составляет 23.

3
7 4
2 4 6
8 5 9 3

То есть, 3 + 7 + 4 + 9 = 23.

Найдите максимальную сумму пути от вершины до основания следующего треугольника:

75
95 64
17 47 82
18 35 87 10
20 04 82 47 65
19 01 23 75 03 34
88 02 77 73 07 63 67
99 65 04 28 06 16 70 92
41 41 26 56 83 40 80 70 33
41 48 72 33 47 32 37 16 94 29
53 71 44 65 25 43 91 52 97 51 14
70 11 33 28 77 73 17 78 39 68 17 57
91 71 52 38 17 14 91 43 58 50 27 29 48
63 66 04 68 89 53 67 30 73 16 69 87 40 31
04 62 98 27 23 09 70 98 73 93 38 53 60 04 23

Примечание: Так как в данном треугольнике всего 16384 возможных маршрута от вершины до основания, эту задачу можно решить проверяя каждый из маршрутов. Однако похожая Задача 67 с треугольником, состоящим из сотни строк, не решается перебором (brute force) и требует более умного подхода! ;o)
'''
import re
def quest18():
    data ="\
    75\
    95 64\
    17 47 82\
    18 35 87 10\
    20 04 82 47 65\
    19 01 23 75 03 34\
    88 02 77 73 07 63 67\
    99 65 04 28 06 16 70 92\
    41 41 26 56 83 40 80 70 33\
    41 48 72 33 47 32 37 16 94 29\
    53 71 44 65 25 43 91 52 97 51 14\
    70 11 33 28 77 73 17 78 39 68 17 57\
    91 71 52 38 17 14 91 43 58 50 27 29 48\
    63 66 04 68 89 53 67 30 73 16 69 87 40 31\
    04 62 98 27 23 09 70 98 73 93 38 53 60 04 23\
    "
    data = data.split(' ')
    newData = []
    [newData.append(x) for x in data if x.isdigit()]
    i = 1
    data = []
    while i<=len(newData):
        data.append(list(newData[:i]))
        newData = newData[i:]
        #[newData.remove(x) for x in newData if x in newData[:i]]
        #newData.remove(newData[:i])
        i+=1
    print(data)    


quest18()


print("")

#19.
'''
Дана следующая информация (однако, вы можете проверить ее самостоятельно):

1 января 1900 года - понедельник.
В апреле, июне, сентябре и ноябре 30 дней.
В феврале 28 дней, в високосный год - 29.
В остальных месяцах по 31 дню.
Високосный год - любой год, делящийся нацело на 4, однако последний год века (ХХ00) является високосным в том и только том случае, если делится на 400.
Сколько воскресений выпадает на первое число месяца в двадцатом веке (с 1 января 1901 года до 31 декабря 2000 года)?
'''
#20. Найдите сумму цифр в числе 100!.
def quest20(end = 100):
    fact = factorial(end)
    string = str(fact)
    i = 0
    summa = 0
    while i < len(string) - 1:
        summa += int(string[i])
        i += 1
    print(summa)

#Считает факториал end!
def factorial(end = 100):
    i = 1
    answer = 1
    while i <= end:
        answer *= i
        i += 1
    return answer
#21.
'''
Пусть d(n) определяется как сумма делителей n (числа меньше n, делящие n нацело).
Если d(a) = b и d(b) = a, где a ≠ b, то a и b называются дружественной парой, а каждое из чисел a и b - дружественным числом.

Например, делителями числа 220 являются 1, 2, 4, 5, 10, 11, 20, 22, 44, 55 и 110, поэтому d(220) = 284. Делители 284 - 1, 2, 4, 71, 142, поэтому d(284) = 220.

Подсчитайте сумму всех дружественных чисел меньше 10000.
'''



